def caesar_cipher(text, shift, lang, direction):
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–ª—Ñ–∞–≤–∏—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞
    if lang == 'ru':
        alphabet_lower = '–∞–±–≤–≥–¥–µ–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è'
        alphabet_upper = alphabet_lower.upper()
        n = 32
    elif lang == 'en':
        alphabet_lower = 'abcdefghijklmnopqrstuvwxyz'
        alphabet_upper = alphabet_lower.upper()
        n = 26
    else:
        return "–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω —è–∑—ã–∫!"

    # –î–ª—è –¥–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è ‚Äî —Å–¥–≤–∏–≥ –≤–ª–µ–≤–æ
    if direction == '–¥–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ':
        shift = -shift

    result = ''
    for char in text:
        if char.isalpha():
            if char.islower():
                index = alphabet_lower.find(char)
                new_char = alphabet_lower[(index + shift) % n]
            else:
                index = alphabet_upper.find(char)
                new_char = alphabet_upper[(index + shift) % n]
            result += new_char
        else:
            result += char
    return result


# --- –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ ---

print('–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —à–∏—Ñ—Ä –¶–µ–∑–∞—Ä—è üîê')

direction = input('–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ / –¥–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ): ').strip().lower()
lang = input('–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ (—Ä—É—Å—Å–∫–∏–π / –∞–Ω–≥–ª–∏–π—Å–∫–∏–π): ').strip().lower()
shift = int(input('–í–≤–µ–¥–∏—Ç–µ —à–∞–≥ —Å–¥–≤–∏–≥–∞ (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ): '))
text = input('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ')

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ –∫–æ—Ä–æ—Ç–∫–æ–π –º–µ—Ç–∫–æ–π
if lang.startswith('—Ä'):
    lang = 'ru'
elif lang.startswith('–∞') or lang.startswith('e'):
    lang = 'en'

# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
result = caesar_cipher(text, shift, lang, direction)

print('–†–µ–∑—É–ª—å—Ç–∞—Ç:')
print(result)